@page
@using FinancialAssistant.DataTransfer.Enums
@model FinancialAssistant.Web.Pages.TransactionsModel
@{
    ViewData["Title"] = "Главная страница";
    ViewData["CssHref"] = "/css/transactions.css";
}

<div class="main-content">
    <div class="header">
        <div class="account-info">
            <span class="account-name">
                <select>
                    @foreach (var accountName in Model.AccountNames)
                    {
                        <option>@accountName</option>
                    }
                </select>
            </span>
            <span class="account-balance">Сумма счета: @Model.AccountBalance</span> 
        </div>
        <div class="account-selector">
            <select>
                @foreach (var month in Enum.GetValues(typeof(MonthsEnum)))
                {
                    if (month.Equals(Enum.GetValues(typeof(MonthsEnum)).GetValue(DateTime.Now.Month - 1)))
                    {
                        <option selected="selected">@month</option>
                        continue;
                    }
                    
                    <option>@month</option>
                }
            </select>
        </div>
        <div class="vertical-line"></div>
        <div class="summary">
            <div class="expenses">
                <h3>Расходы</h3>
                <span>Всего: @Model.TotalExpenses</span>
                <a href="@Url.Page("ExpenseDetails", new { id = Model.LastExpenseId })">Последний расход: @Model.LastExpenseAmount</a>
            </div>
            <div class="income">
                <h3>Доходы</h3>
                <span>Всего: @Model.TotalIncome</span>
                <a href="@Url.Page("IncomeDetails", new { id = Model.LastIncomeId })">Последний доход: @Model.LastIncomeAmount</a>
            </div>
        </div>
    </div>

    <h2>История</h2>
    <div class="transaction-list">
        @foreach (var transaction in Model.Transactions)
        {
        <div class="transaction-item" onclick="openTransaction()">
            <span>@transaction.Date.ToShortDateString()</span>
            <span>@transaction.Name</span>
            <span>@transaction.Category</span>
            <span>@transaction.TransactionType</span>
            <span>@transaction.Amount</span>
            <span class="category-color" style="background-color: @transaction.CategoryColor;"></span>
        </div>
        }
    </div>
</div>

<div class="addTransaction">
    <button onclick="openTransaction()">Добавить транзакцию</button>
</div>
<div class="back-to-top">
    <button onclick="scrollToTop()">Вернуться наверх</button>
</div>

<div id="modal" class="modal">
    <div class="modal-content">
        <span class="close" id="closeModal" onclick="closeTransaction()">&times;</span>
        <h2>Изменить транзакцию</h2>
        <input type="text" placeholder="Введите текст">
        
       
        <button id="save" onclick="saveTransaction()">Сохранить</button>
        <button id="cancel" onclick="closeTransaction()">Отмена</button>
    </div>
</div>

<script>
    const modal = document.getElementById("modal");
    
    function openTransaction() {
        modal.style.display = "block";
    }
    
    function closeTransaction() {
        modal.style.display = "none";
    }
    
    function saveTransaction(){
        //TODO: сделать сохранение
        alert("Данные сохранены!");
        modal.style.display = "none";
    }
    
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    function scrollToTop() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
</script>